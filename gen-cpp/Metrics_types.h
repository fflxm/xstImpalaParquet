/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef Metrics_TYPES_H
#define Metrics_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/TBase.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/stdcxx.h>


namespace impala {

struct TUnit {
  enum type {
    UNIT = 0,
    UNIT_PER_SECOND = 1,
    CPU_TICKS = 2,
    BYTES = 3,
    BYTES_PER_SECOND = 4,
    TIME_NS = 5,
    DOUBLE_VALUE = 6,
    NONE = 7,
    TIME_MS = 8,
    TIME_S = 9,
    TIME_US = 10,
    BASIS_POINTS = 11
  };
};

extern const std::map<int, const char*> _TUnit_VALUES_TO_NAMES;

std::ostream& operator<<(std::ostream& out, const TUnit::type& val);

struct TMetricKind {
  enum type {
    GAUGE = 0,
    COUNTER = 1,
    PROPERTY = 2,
    STATS = 3,
    SET = 4,
    HISTOGRAM = 5
  };
};

extern const std::map<int, const char*> _TMetricKind_VALUES_TO_NAMES;

std::ostream& operator<<(std::ostream& out, const TMetricKind::type& val);

} // namespace

#include "Metrics_types.tcc"

#endif
