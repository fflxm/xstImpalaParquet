cmake_minimum_required(VERSION 2.6)
PROJECT(PARQUET)

SET(CXX_COMMON_FLAGS "${CXX_COMMON_FLAGS} -DBOOST_DATE_TIME_POSIX_TIME_STD_CONFIG")
SET(CXX_COMMON_FLAGS "${CXX_COMMON_FLAGS} -DBOOST_SYSTEM_NO_DEPRECATED")
SET(CXX_COMMON_FLAGS "${CXX_COMMON_FLAGS} -DBOOST_BIND_GLOBAL_PLACEHOLDERS")
SET(CXX_COMMON_FLAGS "${CXX_COMMON_FLAGS} -DBOOST_ALLOW_DEPRECATED_HEADERS")
SET(CXX_COMMON_FLAGS "${CXX_COMMON_FLAGS} -Wall -Wno-sign-compare -Wno-unknown-pragmas -pthread -Wclass-memaccess")

file(GLOB PARQUET_FILES "${CMAKE_SOURCE_DIR}/exec/parquet/*.cc")
file(GLOB RUNTIME_FILES "${CMAKE_SOURCE_DIR}/runtime/*.cc")
file(GLOB COMMON_FILES "${CMAKE_SOURCE_DIR}/common/*.cc")
file(GLOB UTIL_FILES "${CMAKE_SOURCE_DIR}/util/*.cc")
file(GLOB THREAD_C_FILES "${CMAKE_SOURCE_DIR}/gutil/threading/*.cc")
file(GLOB GUTIL_FILES "${CMAKE_SOURCE_DIR}/gutil/*.cc")
file(GLOB GUTIL_DTR_FILES "${CMAKE_SOURCE_DIR}/gutil/strings/*.cc")
file(GLOB GENCPP_FILES "${CMAKE_SOURCE_DIR}/gen-cpp/*.cpp")

SET(CMAKE_CXX_FLAGS "${CXX_COMMON_FLAGS}")
MESSAGE(STATUS "Compiler Flags: ${-pthreadCMAKE_CXX_FLAGS}")

set(Boost_INCLUDE_DIRS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/boost-1.74.0-p1/include")
set(GFlags_INCLUDE_DIRS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/gflags-2.2.0-p2/include")
set(GLog_INCLUDE_DIRS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/glog-0.3.5-p3/include")
set(Thrift_INCLUDE_DIRS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/thrift-0.11.0-p4/include")
set(Rapidjson_INCLUDE_DIRS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/rapidjson-1.1.0/include")
set(Protobuf_INCLUDE_DIRS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/protobuf-3.5.1/include")
set(Hadoop_INCLUDE_DIRS "/home/ff/Impala/toolchain/cdp_components-18462549/hadoop-3.1.1.7.2.14.0-21/include")
set(Cctz_INCLUDE_DIRS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/cctz-2.2/include")
set(JAVA_INCLUDE_PATH "/usr/lib/jvm/java-8-openjdk-amd64/include")
set(Llvm_INCLUDE_DIRS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/llvm-5.0.1-p3/include")
set(Zlib_INCLUDE_DIRS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/zlib-1.2.11/include")
set(Zstd_INCLUDE_DIRS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/zstd-1.4.9/include")
set(Gperftools_INCLUDE_DIRS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/gperftools-2.5-p4/include")

set(GLog_LIBS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/glog-0.3.5-p3/lib/libglog.a")
set(GFlags_LIBS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/gflags-2.2.0-p2/lib/libgflags.a")
set(Protobuf_LIBS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/protobuf-3.5.1/lib/libprotobuf.a")
set(Thrift_LIBS "/home/ff/Impala/toolchain/toolchain-packages-gcc7.5.0/thrift-0.11.0-p4/lib/libthrift.a")
#set(Hadoop_LIBS "/home/ff/Impala/toolchain/cdp_components-18462549/hadoop-3.1.1.7.2.14.0-21/lib/native/libhadoop.a")
#set(Hdfs_LIBS "/home/ff/Impala/toolchain/cdp_components-18462549/hadoop-3.1.1.7.2.14.0-21/lib/native/libhdfs.a")
set(Hdfs_util_LIBS "/home/ff/Impala/toolchain/cdp_components-18462549/hadoop-3.1.1.7.2.14.0-21/lib/native/libhdfs.a")

include_directories(SYSTEM ${Boost_INCLUDE_DIRS} ${GFlags_INCLUDE_DIRS} ${GLog_INCLUDE_DIRS} ${Thrift_INCLUDE_DIRS} ${Rapidjson_INCLUDE_DIRS} ${Protobuf_INCLUDE_DIRS} ${Hadoop_INCLUDE_DIRS} ${Cctz_INCLUDE_DIRS} ${JAVA_INCLUDE_PATH} ${Llvm_INCLUDE_DIRS} ${Zlib_INCLUDE_DIRS} ${Zstd_INCLUDE_DIRS} ${Gperftools_INCLUDE_DIRS})

include_directories(${CMAKE_CURRENT_SOURCE_DIR})

add_library(Parquet ${PARQUET_FILES})
#add_library(Runtime  ${RUNTIME_FILES})
#add_library(ThreadC  ${THREAD_C_FILES})
#add_library(Util  ${UTIL_FILES})
#add_library(GutilS  ${GUTIL_DTR_FILES})
#add_library(Gutil ${GUTIL_FILES})
#add_library(Gencpp  ${GENCPP_FILES})
#add_library(Common  ${COMMON_FILES})

#ADD_EXECUTABLE(testP main.cc)
#add_dependencies(testP Parquet Runtime ThreadC Util GutilS Gutil Gencpp Common )
#TARGET_LINK_LIBRARIES(testP Parquet Runtime ThreadC Util GutilS Gutil Gencpp Common ${GLog_LIBS} ${GFlags_LIBS} ${Protobuf_LIBS} ${Thrift_LIBS} ${Hadoop_LIBS} ${Hdfs_LIBS})

